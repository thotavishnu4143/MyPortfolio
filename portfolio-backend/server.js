const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const mongoose = require('mongoose');
const nodemailer = require('nodemailer');

// Initialize Express
const app = express();
const PORT = 5000;

// Middleware
app.use(cors());
app.use(bodyParser.json());

// MongoDB Connection
const MONGO_URI = 'mongodb://127.0.0.1:27017/portfolio'; // Replace with your MongoDB URI
mongoose.connect(MONGO_URI)
    .then(() => console.log('Connected to MongoDB'))
    .catch((error) => console.error('MongoDB connection error:', error));

// MongoDB Schema
const SubmissionSchema = new mongoose.Schema({
    name: String,
    email: String,
    message: String,
    createdAt: { type: Date, default: Date.now },
});
const Submission = mongoose.model('Submission', SubmissionSchema);

// Nodemailer SMTP Configuration
const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: 'thotavishnu4143@gmail.com', // Your Gmail address
        pass: 'hzpv fche nsao proc',   // App password generated by Gmail
    },
});

app.get('/', (req, res) => {
    res.send('Welcome to the backend of My Portfolio!');
});
// API Endpoint
app.post('/contact', async (req, res) => {
    const { name, email, message } = req.body;

    try {
        // Save submission to MongoDB
        const newSubmission = new Submission({ name, email, message });
        await newSubmission.save();

        // Send email using Nodemailer
        const mailOptions = {
            from: email, // Sender's email
            to: 'thotavishnu4143@gmail.com', // Replace with your receiving email
            subject: `Portfolio Contact Form Submission from ${name}`,
            text: `Message: ${message}\n\nFrom: ${name} (${email})`,
        };

        await transporter.sendMail(mailOptions);
        res.status(200).json({ message: 'Message saved to MongoDB and email sent successfully!' });
    } catch (error) {
        console.error('Error:', error);
        res.status(500).json({ error: 'Failed to process the request.' });
    }
});

// Start Server
app.listen(PORT, () => {
    console.log(`Server running on http://localhost:${PORT}`);
});
